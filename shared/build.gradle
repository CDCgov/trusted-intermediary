plugins {
    id 'java-library'
    id 'groovy'
    id 'java-test-fixtures'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation 'org.reflections:reflections:0.10.2'

    api 'javax.inject:javax.inject:1'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // logging
    implementation 'org.slf4j:slf4j-api:2.0.16'
    implementation 'ch.qos.logback:logback-classic:1.5.16'
    implementation 'net.logstash.logback:logstash-logback-encoder:8.0'

    //jackson
    implementation 'com.fasterxml.jackson.core:jackson-core:2.18.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.2'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.18.2'

    // hapi fhir
    api 'ca.uhn.hapi.fhir:hapi-fhir-base:7.6.1'
    api 'ca.uhn.hapi.fhir:hapi-fhir-structures-r4:7.6.1'
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-caching-caffeine:7.6.1'
    implementation 'ca.uhn.hapi.fhir:hapi-fhir-validation-resources-r4:7.6.1'
    api 'org.fhir:ucum:1.0.9'

    // hapi hl7
    implementation 'ca.uhn.hapi:hapi-base:2.5.1'
    implementation 'ca.uhn.hapi:hapi-structures-v251:2.5.1'

    // Apache Client
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.4.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.4.1'

    // jjwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // azure sdk
    implementation 'com.azure:azure-security-keyvault-secrets:4.9.2'
    implementation 'com.azure:azure-identity:1.15.0'

    testImplementation 'org.apache.groovy:groovy:4.0.25'
    testFixturesImplementation 'org.apache.groovy:groovy:4.0.25'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-4.0'
    testFixturesImplementation 'com.openpojo:openpojo:0.9.1'
    testFixturesImplementation 'nl.jqno.equalsverifier:equalsverifier:3.18.2'

    // dotenv-java
    implementation 'io.github.cdimascio:dotenv-java:3.1.0'

    // postgres
    implementation 'org.postgresql:postgresql:42.7.5'

    // hikari connection pool
    implementation 'com.zaxxer:HikariCP:6.2.1'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.90
            }
        }
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: rootProject.ext.jacoco_excludes)
        }))
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, excludes: rootProject.ext.jacoco_excludes)
        }))
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        resources {
            // Include the mock_credentials folder as part of the resources
            srcDir '../mock_credentials'
        }
    }
}
